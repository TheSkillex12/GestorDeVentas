/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package me.chelo.ventas.igu;

import com.itextpdf.kernel.color.Color;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.border.Border;
import com.itextpdf.layout.border.DashedBorder;
import com.itextpdf.layout.border.SolidBorder;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FilenameFilter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import me.chelo.ventas.Ventas;
import me.chelo.ventas.logica.Controladora;
import me.chelo.ventas.logica.Producto;
import me.chelo.ventas.logica.Vendedor;

/**
 *
 * @author chelo
 */
public class CerrarCaja extends javax.swing.JPanel {

    private Controladora control = new Controladora();
    private Vendedor vendedor = null;
    private boolean cancelar = false;
    
    public CerrarCaja(Vendedor vendedor) {
        this.vendedor = vendedor;
        initComponents();
    }
    
    public boolean getCancelar(){
        return cancelar;
    }
    
    public void setCancelar(boolean cancelar){
        this.cancelar = cancelar;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Soloist Academy", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setText("VENTAS - KIOSCO");

        jLabel2.setText("Estas seguro de que quieres cerrar la caja?");

        jButton1.setForeground(new java.awt.Color(255, 102, 102));
        jButton1.setText("CANCELAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setForeground(new java.awt.Color(255, 153, 0));
        jButton2.setText("CERRAR CAJA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2))))
                .addContainerGap(102, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        vendedor.setCajaAbierta(false);
        control.editarVendedor(vendedor);
        generarPdf();
        for(Producto ps : control.traerProductos()){
            control.borrarProducto(ps.getId());
        }
        control.resetIds();
        cancelar = false;
        setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cancelar = true;
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    private void generarPdf(){
        String[] b = vendedor.getEntrada().split(" ");
        String a = vendedor.getNombre()+vendedor.getApellido().charAt(0)+"-"+b[0].replace("/", "-");
        String entrada = new SimpleDateFormat("dd/MM/yyyy").format(new Date());
        String salida = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date());
        
        String path = a.toUpperCase()+".pdf"; //PatriciaL-16-04-24.pdf
        String jarDirectory = System.getProperty("user.dir"); // Ruta del directorio actual

        PdfWriter pdfWriter = null;
        try {
            String uniqueFileName = generateUniqueFileName(jarDirectory, path);
            pdfWriter = new PdfWriter(uniqueFileName);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ventas.class.getName()).log(Level.SEVERE, null, ex);
        }
        PdfDocument pdfDocument = new PdfDocument(pdfWriter);
        pdfDocument.setDefaultPageSize(PageSize.A4);
        
        Document document = new Document(pdfDocument);
        
        float threecol = 190f;
        float onetwo[] = {threecol+125f, threecol*2};
        float twocol = 285f;
        float twocol150 = twocol+150f;
        float twocolumnWitdh[] = {twocol150, twocol};
        float oneColumnWidth[] = {twocol150};
        float threeColumnWitdth[] = {threecol,threecol,threecol,threecol};
        float fullWidth[] = {threecol*3};
        Paragraph onsp = new Paragraph("\n");
        
        Table table = new Table(twocolumnWitdh);
        
        table.addCell(new Cell().add("Venta - Kiosco").setFontSize(20f).setBorder(Border.NO_BORDER).setBold());
        
        Table nestedTable = new Table(new float[]{twocol/2, twocol/2});
        nestedTable.addCell(getHeaderTextCell("VENTA NRO:"));
        nestedTable.addCell(getHeaderTextCellValue(String.valueOf(vendedor.getVentas())));
        nestedTable.addCell(getHeaderTextCell("FECHA"));
        nestedTable.addCell(getHeaderTextCellValue(entrada));
        table.addCell(new Cell().add(nestedTable).setBorder(Border.NO_BORDER));
        
        Border gb = new SolidBorder(Color.GRAY,2f);
        Table divider = new Table(fullWidth);
        divider.setBorder(gb);
        
        document.add(table);
        document.add(onsp);
        document.add(divider);
        document.add(onsp);
        
        Table twoColTable = new Table(twocolumnWitdh);
        twoColTable.addCell(getBillingShippingCell("Informacion Vendedor:"));
        twoColTable.addCell(getBillingShippingCell("Informacion Ventas:"));
        document.add(twoColTable.setMarginBottom(12f));
        
        Table twoColTable2 = new Table(twocolumnWitdh);
        twoColTable2.addCell(getCell10fLeft("Nombre", true));
        twoColTable2.addCell(getCell10fLeft("Cantidad Ventas", true));
        twoColTable2.addCell(getCell10fLeft(vendedor.getNombre().toUpperCase()+" "+vendedor.getApellido().toUpperCase(), false));
        twoColTable2.addCell(getCell10fLeft(control.traerProductos().size()+"", false));
        document.add(twoColTable2);
        
        Table twoColTable3 = new Table(twocolumnWitdh);
        twoColTable3.addCell(getCell10fLeft("Entrada", true));
        twoColTable3.addCell(getCell10fLeft("Total Ventas", true));
        twoColTable3.addCell(getCell10fLeft(vendedor.getEntrada(), false));
        twoColTable3.addCell(getCell10fLeft("$"+getTotal(), false));
        document.add(twoColTable3);
        
        Table oneColTable = new Table(oneColumnWidth);
        oneColTable.addCell(getCell10fLeft("Salida", true));
        oneColTable.addCell(getCell10fLeft(salida, false));
        document.add(oneColTable.setMarginBottom(10f));
        
        Table tableDivider2 = new Table(fullWidth);
        Border dgb = new DashedBorder(Color.GRAY, 0.5f);
        document.add(tableDivider2.setBorder(dgb));
        
        Paragraph productPara = new Paragraph("Productos vendidos");
        document.add(productPara.setBold());
        
        Table threeColTable1 = new Table(threeColumnWitdth);
        threeColTable1.setBackgroundColor(Color.BLACK, 0.7f);
        threeColTable1.addCell(new Cell().add("Cantidad").setBold().setFontColor(Color.WHITE).setBorder(Border.NO_BORDER));
        threeColTable1.addCell(new Cell().add("Producto").setBold().setFontColor(Color.WHITE).setBorder(Border.NO_BORDER));
        threeColTable1.addCell(new Cell().add("MetodoPago").setBold().setTextAlignment(TextAlignment.RIGHT).setFontColor(Color.WHITE).setBorder(Border.NO_BORDER));
        threeColTable1.addCell(new Cell().add("Precio").setBold().setTextAlignment(TextAlignment.RIGHT).setFontColor(Color.WHITE).setBorder(Border.NO_BORDER).setMarginRight(15f));
        document.add(threeColTable1);
        
        Table threeColTable2 = new Table(threeColumnWitdth);
        for(Producto p1 : control.traerProductos()){
            threeColTable2.addCell(new Cell().add(p1.getCantidad()).setBorder(Border.NO_BORDER).setMarginLeft(10f));
            threeColTable2.addCell(new Cell().add(p1.getProducto()).setBorder(Border.NO_BORDER));
            threeColTable2.addCell(new Cell().add(p1.getMetodoPago()).setTextAlignment(TextAlignment.CENTER).setBorder(Border.NO_BORDER));
            threeColTable2.addCell(new Cell().add(String.valueOf(p1.getPrecio())).setTextAlignment(TextAlignment.RIGHT).setBorder(Border.NO_BORDER).setMarginRight(15f));
        }
        document.add(threeColTable2.setMarginBottom(20f));
   
        Table threeColTable4 = new Table(onetwo);
        threeColTable4.addCell(new Cell().add("").setBorder(Border.NO_BORDER));
        threeColTable4.addCell(new Cell().add(tableDivider2).setBorder(Border.NO_BORDER));
        document.add(threeColTable4);
        
        Table threeColTable3 = new Table(threeColumnWitdth);
        threeColTable3.addCell(new Cell().add("").setBorder(Border.NO_BORDER)).setMarginLeft(10f);
        threeColTable3.addCell(new Cell().add("").setBorder(Border.NO_BORDER));
        threeColTable3.addCell(new Cell().add("Total").setTextAlignment(TextAlignment.RIGHT).setBorder(Border.NO_BORDER));
        threeColTable3.addCell(new Cell().add(getTotal()+"").setTextAlignment(TextAlignment.RIGHT).setBorder(Border.NO_BORDER));
        document.add(threeColTable3);
        
        document.add(tableDivider2);
        document.add(new Paragraph("\n"));
        document.add(divider.setBorder(new SolidBorder(Color.GRAY,1)).setMarginBottom(15f));
        
        Table tt = new Table(fullWidth);
        tt.addCell(new Cell().add("Developed by Santiago Toara - 2024").setFontColor(Color.BLACK, 0.4f).setTextAlignment(TextAlignment.CENTER).setBorder(Border.NO_BORDER));
        document.add(tt);
        
        document.close();
    }
    
    private String generateUniqueFileName(String directory, String fileName) {
        File folder = new File(directory);
        String customFolderPath = folder.getAbsolutePath();

        String name = new File(fileName).getName();
        String extension = "";

        int i = name.lastIndexOf('.');
        if (i > 0) {
            extension = name.substring(i + 1);
            name = name.substring(0, i);
        }

        String uniqueFileName = customFolderPath + File.separator + name + "." + extension;
        int sequence = 1;

        // Comprueba si el archivo ya existe y agrega un número de secuencia si es necesario
        while (new File(uniqueFileName).exists()) {
            uniqueFileName = customFolderPath + File.separator + name + "(" + sequence + ")." + extension;
            sequence++;
        }

        return uniqueFileName;
    }

    
    private Double getTotal(){
        double okey = 0;
        for(Producto p : control.traerProductos()){
            okey += p.getPrecio();
        }
        return okey;
    }
    
    private Cell getHeaderTextCell(String str){
        return new Cell().add(str).setBold().setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.RIGHT);
    }
    
    private Cell getHeaderTextCellValue(String str){
        return new Cell().add(str).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.LEFT);
    }
    
    private Cell getBillingShippingCell(String str){
        return new Cell().add(str).setFontSize(12f).setBold().setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.LEFT);
    }
    
    private Cell getCell10fLeft(String str, boolean isBold){
        Cell myCell = new Cell().add(str).setFontSize(10f).setBorder(Border.NO_BORDER).setTextAlignment(TextAlignment.LEFT);
        return isBold ? myCell.setBold() : myCell;
    }
    
}
